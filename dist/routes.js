"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.router = void 0;
const express_1 = require("express");
const isAuthenticated_1 = require("./middlewares/isAuthenticated");
const CreateEventController_1 = require("./controllers/event/CreateEventController");
const UpdateEventController_1 = require("./controllers/event/UpdateEventController");
const GetEventDetailsController_1 = require("./controllers/event/GetEventDetailsController");
const DeleteEventController_1 = require("./controllers/event/DeleteEventController");
const ListEventsController_1 = require("./controllers/event/ListEventsController");
const CheckUnavailableDatesController_1 = require("./controllers/event/CheckUnavailableDatesController");
const CheckAvailableTimeSlotsController_1 = require("./controllers/event/CheckAvailableTimeSlotsController");
const UpdateParticipantCountController_1 = require("./controllers/event/UpdateParticipantCountController");
const CreateCategoryController_1 = require("./controllers/category/CreateCategoryController");
const DeleteCategoryController_1 = require("./controllers/category/DeleteCategoryController");
const ListCategoriesController_1 = require("./controllers/category/ListCategoriesController");
const UpdateCategoryController_1 = require("./controllers/category/UpdateCategoryController");
const CreateBannerController_1 = require("./controllers/banner/CreateBannerController");
const DeleteBannerController_1 = require("./controllers/banner/DeleteBannerController");
const ListActiveBannersController_1 = require("./controllers/banner/ListActiveBannersController");
const ListAllBannersController_1 = require("./controllers/banner/ListAllBannersController");
const UpdateBannerController_1 = require("./controllers/banner/UpdateBannerController");
const router = (0, express_1.Router)();
exports.router = router;
router.post('/', isAuthenticated_1.isAuthenticated, isAuthenticated_1.isCoordinator, new CreateEventController_1.CreateEventController().handle);
router.get('/', new ListEventsController_1.ListEventsController().handle);
router.get('/details', new GetEventDetailsController_1.GetEventDetailsController().handle);
router.put('/', isAuthenticated_1.isAuthenticated, isAuthenticated_1.isCoordinator, new UpdateEventController_1.UpdateEventController().handle);
router.delete('/', isAuthenticated_1.isAuthenticated, isAuthenticated_1.isCoordinator, new DeleteEventController_1.DeleteEventController().handle);
router.get('/unavailable-dates', isAuthenticated_1.isAuthenticated, isAuthenticated_1.isCoordinator, new CheckUnavailableDatesController_1.CheckUnavailableDatesController().handle);
router.get('/available-time-slots', isAuthenticated_1.isAuthenticated, isAuthenticated_1.isCoordinator, new CheckAvailableTimeSlotsController_1.CheckAvailableTimeSlotsController().handle);
router.patch('/update-participant-count', new UpdateParticipantCountController_1.UpdateParticipantCountController().handle);
router.get('/categories', new ListCategoriesController_1.ListCategoriesController().handle);
router.post('/categories', isAuthenticated_1.isAuthenticated, isAuthenticated_1.isAdmin, new CreateCategoryController_1.CreateCategoryController().handle);
router.put('/categories', isAuthenticated_1.isAuthenticated, isAuthenticated_1.isAdmin, new UpdateCategoryController_1.UpdateCategoryController().handle);
router.delete('/categories', isAuthenticated_1.isAuthenticated, isAuthenticated_1.isAdmin, new DeleteCategoryController_1.DeleteCategoryController().handle);
router.post('/banners', isAuthenticated_1.isAuthenticated, isAuthenticated_1.isAdmin, new CreateBannerController_1.CreateBannerController().handle);
router.get('/banners', isAuthenticated_1.isAuthenticated, isAuthenticated_1.isAdmin, new ListAllBannersController_1.ListAllBannersController().handle);
router.get('/banners/active', new ListActiveBannersController_1.ListActiveBannersController().handle);
router.put('/banners', isAuthenticated_1.isAuthenticated, isAuthenticated_1.isAdmin, new UpdateBannerController_1.UpdateBannerController().handle);
router.delete('/banners', isAuthenticated_1.isAuthenticated, isAuthenticated_1.isAdmin, new DeleteBannerController_1.DeleteBannerController().handle);
